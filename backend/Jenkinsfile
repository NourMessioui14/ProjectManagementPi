pipeline {
    agent any
    tools {
        nodejs "NodeJS"
    }
    environment { registryCredentials = "nexus" registry = "172.31.83.88:8083" }
    stages {
        stage('Install dependencies') {
            steps {
                script {
                    try {
                        dir('backend') {
                            sh('npm install')
                        }
                    } catch (err) {
                        currentBuild.result = 'FAILURE'
                        error("Failed to install dependencies: ${err}")
                    }
                }
            }
        }

        
        stage('Unit Test') {
            steps {
                script {
                    // Run unit tests (customize as needed)
                    echo 'This is a testing stage for unit tests.'
                }
            }
        }



        stage('SonarQube Analysis') {
    steps {
        script {
            def scannerHome = tool 'scanner'
            withSonarQubeEnv {
                sh "${scannerHome}/bin/sonar-scanner -Dsonar.projectKey=sprintmanagement"
            }
        }
    }
}

        
        stage('Build application') {
            steps {
                script {
                    // Build the application (customize as needed)
                    echo 'This is a testing stage for building the application.'
                }
            }
        }


        stage('Building images (node and mongo)') {
    steps {
        script {
                sh('docker-compose build') // Exécuter la commande dans le répertoire backend
            
        }
    }
}

        stage('Deploy to Nexus') { 
            steps{ 
                script { 
                    docker.withRegistry("http://"+registry, registryCredentials ) { 
                        sh('docker push $registry/nodemongoapp:5.0 ') 
                    } 
                } 
            } 
        }


        
    }
}
